# name: Build and Push Docker Image

# on:
#   push:
#     branches: [ "main", "develop" ]
#     tags: [ 'v*.*.*' ]
#   pull_request:
#     branches: [ "main" ]

# env:
#   # Registres Docker (choisir un ou plusieurs)
#   DOCKER_HUB_REGISTRY: docker.io
#   GHCR_REGISTRY: ghcr.io
#   IMAGE_NAME: musicspree

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write
#       id-token: write

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v4

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v3

#     # Login Docker Hub (optionnel)
#     - name: Log into Docker Hub
#       if: github.event_name != 'pull_request'
#       uses: docker/login-action@v3
#       with:
#         registry: ${{ env.DOCKER_HUB_REGISTRY }}
#         username: ${{ secrets.DOCKERHUB_USERNAME }}
#         password: ${{ secrets.DOCKERHUB_TOKEN }}

#     # Login GitHub Container Registry
#     - name: Log into GitHub Container Registry
#       if: github.event_name != 'pull_request'
#       uses: docker/login-action@v3
#       with:
#         registry: ${{ env.GHCR_REGISTRY }}
#         username: ${{ github.actor }}
#         password: ${{ secrets.GITHUB_TOKEN }}

#     # Extract metadata
#     - name: Extract metadata
#       id: meta
#       uses: docker/metadata-action@v5
#       with:
#         images: |
#           ${{ env.DOCKER_HUB_REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
#           ${{ env.GHCR_REGISTRY }}/${{ github.repository }}
#         tags: |
#           type=ref,event=branch
#           type=ref,event=pr
#           type=semver,pattern={{version}}
#           type=semver,pattern={{major}}.{{minor}}
#           type=semver,pattern={{major}}
#           type=raw,value=latest,enable={{is_default_branch}}

#     # Build and push Docker image
#     - name: Build and push Docker image
#       id: build-and-push
#       uses: docker/build-push-action@v5
#       with:
#         context: .
#         platforms: linux/amd64,linux/arm64
#         push: ${{ github.event_name != 'pull_request' }}
#         tags: ${{ steps.meta.outputs.tags }}
#         labels: ${{ steps.meta.outputs.labels }}
#         cache-from: type=gha
#         cache-to: type=gha,mode=max
#         build-args: |
#           VERSION=${{ steps.meta.outputs.version }}
#           COMMIT_SHA=${{ github.sha }}

#     # Generate artifact attestation (sécurité)
#     - name: Generate artifact attestation
#       if: github.event_name != 'pull_request'
#       uses: actions/attest-build-provenance@v1
#       with:
#         subject-name: ${{ env.GHCR_REGISTRY }}/${{ github.repository }}
#         subject-digest: ${{ steps.build-and-push.outputs.digest }}
#         push-to-registry: true